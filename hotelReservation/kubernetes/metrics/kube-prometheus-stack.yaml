apiVersion: v1
kind: Namespace
metadata:
  name: monitoring
---
apiVersion: source.toolkit.fluxcd.io/v1beta1
kind: HelmRepository
metadata:
  name: kube-prom-stack
  namespace: monitoring
spec:
  interval: 24h
  url: https://prometheus-community.github.io/helm-charts
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prom-stack
  namespace: monitoring
spec:
  interval: 2m
  releaseName: kube-prometheus-stack
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 23.2.0
      sourceRef:
        kind: HelmRepository
        name: kube-prom-stack
        namespace: monitoring
  values:
    nameOverride: kube-prom-stack
    namespaceOverride: monitoring
    fullNameOverride: ''
    alertmanager:
      enabled: false
      alertmanagerSpec:
        nodeSelector:
          node: ak-panozzo-utils
    grafana:
      nodeSelector:
        node: ak-panozzo-utils
      adminPassword: admin
      service:
        type: NodePort
        port: 80
        targetPort: 3000
        nodePort: 30300
      dashboardProviders:
        dashboardproviders.yaml:
          apiVersion: 1
          providers:
            - name: default
              orgId: 1
              folder:
              type: file
              disableDeletion: true
              editable: false
              options:
                path: /var/lib/grafana/dashboards/default
      dashboards:
        default:
          istio-dash:
            gnetId: 7639
            revision: 68
            datasource: Prometheus
          istio-per-service-dash:
            gnetId: 7636
            revision: 68
            datasource: Prometheus
          istio-per-workload-dash:
            gnetId: 7630
            revision: 68
            datasource: Prometheus
          locust-dashboard:
            gnetId: 11985
            revision: 3
            datasource: Prometheus
          node-monitoring:
            gnetId: 13077
            revision: 3
            datasource: Prometheus
          vpa:
            gnetId: 14588
            revision: 2
            datasource: Prometheus
    kube-state-metrics:
      metricLabelsAllowlist:
        - pods=[role]
      nodeSelector:
        node: ak-panozzo-utils
    prometheusOperator:
      nodeSelector:
        node: ak-panozzo-utils
    #      kubeletService:
    #        enabled: false
    kubelet:
      enabled: false
    #      serviceMonitor:
    #        cAdvisor: false
    #        cAdvisorRelabelings:
    #          - sourceLabels: [ "__address__" ]
    #            regex: "(.*):.*"
    #            targetLabel: "instance"
    #            replacement: "akamas"
    nodeExporter:
      serviceMonitor:
        relabelings:
          - action: labelmap
            regex: __meta_kubernetes_(.+)
    prometheus:
      service:
        type: NodePort
        port: 9090
        targetPort: 9090
        nodePort: 30900
      prometheusSpec:
        podMonitorSelector:
          matchLabels:
            app.kubernetes.io/name: flagger
        nodeSelector:
          node: ak-panozzo-utils
        additionalScrapeConfigs:
          - job_name: 'go_metrics'
            kubernetes_sd_configs:
              - role: service
            relabel_configs:
            - source_labels: [__meta_kubernetes_namespace]
              regex: 'hotel-res'
              action: keep
            - source_labels: [__address__]
              regex: 'frontend.*' #'.*\..*\..*'
              target_label: instance
              replacement: frontend
            - source_labels: [__address__]
              regex: 'geo.*' #'.*\..*\..*'
              target_label: instance
              replacement: geo
            - source_labels: [__address__]
              regex: 'user.*' #'.*\..*\..*'
              target_label: instance
              replacement: user
            - source_labels: [__address__]
              regex: 'profile.*' #'.*\..*\..*'
              target_label: instance
              replacement: profile
            - source_labels: [__address__]
              regex: 'rate.*' #'.*\..*\..*'
              target_label: instance
              replacement: rate
            - source_labels: [__address__]
              regex: 'recommendation.*' #'.*\..*\..*'
              target_label: instance
              replacement: recommendation
            - source_labels: [__address__]
              regex: 'reservation.*' #'.*\..*\..*'
              target_label: instance
              replacement: reservation
            - source_labels: [__address__]
              regex: 'search.*' #'.*\..*\..*'
              target_label: instance
              replacement: search
            - source_labels: [__address__]
              regex: 'memcached-rate.*' #'.*\..*\..*'
              target_label: instance
              replacement: memcached-rate
              action: drop
            - source_labels: [__address__]
              regex: 'memcached-profile.*' #'.*\..*\..*'
              target_label: instance
              replacement: memcached-profile
              action: drop
            - source_labels: [__address__]
              regex: 'memcached-reserve.*' #'.*\..*\..*'
              target_label: instance
              replacement: memcached-reserve
              action: drop
            - source_labels: [__address__]
              regex: 'mongodb-recommendation.*' #'.*\..*\..*'
              target_label: instance
              replacement: mongodb-recommendation
              action: drop
            - source_labels: [__address__]
              regex: 'mongodb-reservation.*' #'.*\..*\..*'
              target_label: instance
              replacement: mongodb-reservation
              action: drop
            - source_labels: [__address__]
              regex: 'mongodb-rate.*' #'.*\..*\..*'
              target_label: instance
              replacement: mongodb-rate
              action: drop
            - source_labels: [__address__]
              regex: 'mongodb-user.*' #'.*\..*\..*'
              target_label: instance
              replacement: mongodb-user
              action: drop
            - source_labels: [__address__]
              regex: 'mongodb-profile.*' #'.*\..*\..*'
              target_label: instance
              replacement: mongodb-profile
              action: drop
            - source_labels: [__address__]
              regex: 'mongodb-geo.*' #'.*\..*\..*'
              target_label: instance
              replacement: mongodb-geo
              action: drop
            - source_labels: [__address__]
              regex: 'jaeger.*' #'.*\..*\..*'
              target_label: instance
              replacement: jaeger
              action: drop
            - source_labels: [__address__]
              regex: 'consul.*' #'.*\..*\..*'
              target_label: instance
              replacement: consul
              action: drop
          - job_name: 'istiod'
            kubernetes_sd_configs:
              - role: endpoints
                namespaces:
                  names:
                    - istio-system
            relabel_configs:
              - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
                action: keep
                regex: istiod;http-monitoring
          - job_name: 'envoy-stats'
            metrics_path: /stats/prometheus
            kubernetes_sd_configs:
              - role: pod
            relabel_configs:
              - source_labels: [__meta_kubernetes_pod_container_port_name]
                action: keep
                regex: '.*-envoy-prom'
              - source_labels: [__meta_kubernetes_pod_annotation_kubectl_kubernetes_io_default_container]
                regex: 'wrk2'
                target_label: instance
                replacement: wrk2
              - source_labels: [__meta_kubernetes_pod_label_io_kompose_service]
                regex: 'frontend' #'.*\..*\..*'
                target_label: instance
                replacement: frontend
              - source_labels: [__meta_kubernetes_pod_label_io_kompose_service]
                regex: 'geo' #'.*\..*\..*'
                target_label: instance
                replacement: geo
              - source_labels: [__meta_kubernetes_pod_label_io_kompose_service]
                regex: 'user' #'.*\..*\..*'
                target_label: instance
                replacement: user
              - source_labels: [__meta_kubernetes_pod_label_io_kompose_service]
                regex: 'profile' #'.*\..*\..*'
                target_label: instance
                replacement: profile
              - source_labels: [__meta_kubernetes_pod_label_io_kompose_service]
                regex: 'rate' #'.*\..*\..*'
                target_label: instance
                replacement: rate
              - source_labels: [__meta_kubernetes_pod_label_io_kompose_service]
                regex: 'recommendation' #'.*\..*\..*'
                target_label: instance
                replacement: recommendation
              - source_labels: [__meta_kubernetes_pod_label_io_kompose_service]
                regex: 'reservation' #'.*\..*\..*'
                target_label: instance
                replacement: reservation
              - source_labels: [__meta_kubernetes_pod_label_io_kompose_service]
                regex: 'search' #'.*\..*\..*'
                target_label: instance
                replacement: search
              - source_labels: [__meta_kubernetes_pod_label_io_kompose_service]
                regex: 'memcached-rate' #'.*\..*\..*'
                target_label: instance
                replacement: memcached-rate
              - source_labels: [__meta_kubernetes_pod_label_io_kompose_service]
                regex: 'memcached-profile' #'.*\..*\..*'
                target_label: instance
                replacement: memcached-profile
              - source_labels: [__meta_kubernetes_pod_label_io_kompose_service]
                regex: 'memcached-reserve' #'.*\..*\..*'
                target_label: instance
                replacement: memcached-reserve
              - source_labels: [__meta_kubernetes_pod_label_io_kompose_service]
                regex: 'mongodb-recommendation' #'.*\..*\..*'
                target_label: instance
                replacement: mongodb-recommendation
              - source_labels: [__meta_kubernetes_pod_label_io_kompose_service]
                regex: 'mongodb-reservation' #'.*\..*\..*'
                target_label: instance
                replacement: mongodb-reservation
              - source_labels: [__meta_kubernetes_pod_label_io_kompose_service]
                regex: 'mongodb-rate' #'.*\..*\..*'
                target_label: instance
                replacement: mongodb-rate
              - source_labels: [__meta_kubernetes_pod_label_io_kompose_service]
                regex: 'mongodb-user' #'.*\..*\..*'
                target_label: instance
                replacement: mongodb-user
              - source_labels: [__meta_kubernetes_pod_label_io_kompose_service]
                regex: 'mongodb-profile' #'.*\..*\..*'
                target_label: instance
                replacement: mongodb-profile
              - source_labels: [__meta_kubernetes_pod_label_io_kompose_service]
                regex: 'mongodb-geo' #'.*\..*\..*'
                target_label: instance
                replacement: mongodb-geo
              - source_labels: [__meta_kubernetes_pod_label_io_kompose_service]
                regex: 'jaeger' #'.*\..*\..*'
                target_label: instance
                replacement: jaeger
              - source_labels: [__meta_kubernetes_pod_label_io_kompose_service]
                regex: 'consul' #'.*\..*\..*'
                target_label: instance
                replacement: consul
            
          - job_name: 'kubernetes-apiservers'
            kubernetes_sd_configs:
              - role: endpoints
            scheme: https
            tls_config:
              ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
              insecure_skip_verify: true
            bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

            relabel_configs:
              - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
                action: keep
                regex: default;kubernetes;https

          - job_name: 'kubernetes-cadvisor'
            scheme: https
            metrics_path: /metrics/cadvisor
            tls_config:
              ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
              insecure_skip_verify: true
            authorization:
              type: Bearer
              credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
            kubernetes_sd_configs:
              - role: node
            relabel_configs:
              - target_label: __scheme__
                replacement: https